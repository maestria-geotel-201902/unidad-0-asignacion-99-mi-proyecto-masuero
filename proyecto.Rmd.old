---
# output: github_document
output: 
  pdf_document:
    keep_tex: true
    fig_caption: true
    latex_engine: pdflatex
    template: svm-latex-ms.tex
    number_sections: true
title: | 
        | Estudio correlacional de los datos de personas discapacitadas en la República Dominicana respecto a datos de contaminación y Análisis Geoestadístico de los datos de las precipitaciones ocurridas en el país durante el año 1984.   
       
author:
- name: Massiel Suero
  affiliation: Estudiante de la Maestría en Teledetección y Ciencias de la Información Geográfica, Universidad Autónoma de Santo Domingo (UASD)
  
abstract: "Este proyecto se desarrolla dentro del marco de la Materia Análisis Espacial de la Maestría en Teledetección y Ciencias de la Información Geográfica, en la Universidad Autónoma de Santo Domingo (UASD). Los datos que son utilizados para el estudio, corresponden a los resultados del IX Censo Nacional de Población y Vivienda, 2010.Extrayendo de estos datos los correspondientes a discapacidad y contaminación,se utilizan los mismos para tratar de establecer el grado de aglomeración de las personas con discapacidad en el espacio de la República Dominicana. Luego, a través de la modelización de la información, se intenta establecer si la cantidad de personas con discapacidad se encuentra relacionada con los datos de contaminación. Al finalizar, se realiza el análisis geoestadístico de los datos de las precipitaciones ocurridas sobre el territorio nacional en el año 1984."

keywords: "Discapacidad, Contaminación, Vivienda, República Dominicana, Censo, Hot Spot, Correlación"
date: "`r format(Sys.time(), '%B %d, %Y')`"
geometry: margin=1in
fontfamily: mathpazo
fontsize: 11pt
# spacing: double
bibliography: bibliography.bib
# csl: plos-one.csl
csl: apa.csl
header-includes:
  \usepackage{pdflscape}
  \newcommand{\blandscape}{\begin{landscape}}
  \newcommand{\elandscape}{\end{landscape}}
editor_options: 
  chunk_output_type: console
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = TRUE,
  collapse=TRUE,
  out.width='100%',
  fig.path = "img/",
  eval = T
)
```

# Introducción

A los fines de garantizar oportunidades de desarrollo y de determinar las posibles causas por las cuáles pudieran existir puntos de aglomeración de variables relacionadas a aspectos sociales y de desarrollo, es necesario que en la República Dominicana sean realizados estudios estadísticos, especialmente a nivel espacial a los fines de realizar planificación estratégica. En el caso particular de este proyecto, las cuestionantes que se intentan responder corresponden a: ¿Cuáles son los hot spots de personas con discapacidad? y ¿Están relacionados los datos de contaminación, con la concentración de personas con esta condición?. Para responder estas preguntas, hacemos uso de las herramientas del análisis espacial con el fin de estudiar el comportamiento, en nuestro territorio de las variables señaladas. Estos resultados, permitirían tomar decisiones en miras de mejorar la calidad de vida de las personas discapacitadas, así como establecer políticas públicas e inversiones en los lugares más vulnerables.  

De manera adicional se realiza el análisis geoestadístico de los datos de precipitaciones en el año 1984, a los fines de determinar el comportamiento de las lluvias en todo el territorio del país durante el período señalado. 

# Metodología

Como fase inicial, a partir del archivo general que contiene todos los datos del IX Censo Nacional de Población y Vivienda 2010, se seleccionaron los datos respecto a las variables de interés. Estos datos se convierten en un objeto sobre el cual se realizan las pruebas y análisis correspondientes. A partir de este objeto se genera el análisis de vecindad y posteriormente la matriz de pesos espaciales. Con estos datos se comienza el análisis de correlación aplicando en primer lugar el test de la I de Moran y luego generando el mapa de Indicadores locales de asociación espacial (LISA), para determinar los Hot Spot de personas con discapacidad. Posteriormente se realiza la modelización utilizando las variables de contaminacion a los fines de determinar si existe algún tipo de correlación entre las variables.

Respecto al análisis de los datos de precipitación, el primer paso es seleccionar, del archivo que contiene los datos de precipitaciones de los años 1979 hasta 2014, los datos correspondientes al 11984. Con estos datos se realizan diferentes  variogramas y se elige el modelo de variograma que se utilizará durante la interpolación por kriging ordinario.

# Resultados

```{r, include=FALSE}
library(sf)
library(raster)
library(rgdal)
library(tidyverse)
library(readxl)
library(tmap)
library(RColorBrewer)
library(units)
library(spdep)
library(lmtest)
library(ggplot2)
library(gstat)
library(stars)
source('lisaclusters.R')

vivpersgeom_sf <- readRDS('DATA/vivpersgeom_sf.RDS')
miobj <- vivpersgeom_sf %>% select(
  matches('TOPONIMIA|Categoría Ocupacional: Discapacitado|Contaminación.*Si$|Población total|Condición de ocupación')
)
miobj <- miobj %>% mutate(TOTALVIV=`Condición de ocupación: Ocupada con personas presentes` + `Condición de ocupación: Desocupada`) %>% select(-matches('Condición de ocupación'))
miobj <- miobj %>% rename(TOTALPERS='Población total', DISC='Categoría Ocupacional: Discapacitado') %>% mutate(DISC_PCT=DISC/TOTALPERS*100)
miobj
rutadiv <- 'DATA/divisionRD.gpkg'
prov <- st_read(rutadiv, layer = 'PROVCenso2010')

miobj.sp <- as_Spatial(miobj)
miobj.nb <- poly2nb(as(miobj, 'Spatial'), row.names = miobj$TOPONIMIA, queen = TRUE)
```

Para tratar de identificar estructuras de concentración o dispersión el primer paso que se realiza en este proyecto es el análisis de la vecindad utilizando el criterio de contiguidad Queen, que es aquella que considera como vecinos a las unidades espaciales que compartan alguna arista o un punto.

Se obtuvieron los siguientes resultados:

````{r, echo = FALSE}
summary(miobj.nb)
````

A continuación el grafo que muestra los resultados:

````{r, echo = FALSE}
coords <- coordinates(as((miobj), 'Spatial'))
plot(miobj.sp, border="blue", lwd=0.5)
plot.nb(miobj.nb,coords, add = T)
````

Luego se asignan los pesos a cada relación vecina, lo que permitirá definir la fuerza de esta relación en base a cercanía. Se obtuvieron los siguientes datos:

Estilo Weighted:
````{r, echo = FALSE }
miobj.w.W <- nb2listw(miobj.nb)
miobj.w.W
```

Estilo Binario:
````{r, echo = FALSE}
miobj.w.B <- nb2listw(miobj.nb, style = 'B')
miobj.w.B
```

Para evaluar la correlación se utilizó el índice I de Moran, obteniendo los siguientes resultados:

````{r, echo = FALSE}
moran.test(miobj$DISC_PCT, listw = miobj.w.W)
```

En el caso del test de la I de Moran global, el resultado nos muestra que existe correlación positiva, con una expectativa de relación negativa.

En el gráfico de Moran podemos obervar los porcentajes de personas con discapacidad, contra el valor esperado de los mismos con relación a su ubicación espacial, obteniendo los datos de los municipios donde el porcentaje no se relaciona con sus vecinos. 

````{r, echo = FALSE}
moran.plot(miobj$DISC_PCT, listw = miobj.w.W)
```

Para obtener el mapa que nos entregue información sobre los patrones geográficos de autocorrelación espacial, necesitamos realizar un mapa LISA (Local indicator of spatial asociation), este mapa nos entrega los clusters de personas con discapacidad en la República Dominicana. 
Al mismo tiempo, identifica los municipios donde la medición de la variable corresponde a valores inferiores al promedio, rodeados por municipios vecinos que también se encuentran bajo la media en relación al porcentaje de discapacidad (cold spot). 

```{r, include= FALSE}
DISC_lmoran <- localmoran(miobj$DISC, listw = miobj.w.W)
summary(DISC_lmoran)

DISC_PCT_lmoran <- localmoran(miobj$DISC_PCT, listw = miobj.w.W)
summary(DISC_PCT_lmoran)

mapa_moran <- cbind(miobj, DISC_lmoran)
ggplot(mapa_moran)+
  geom_sf(aes(fill = Ii))+
  labs(fill = "Estadísitico Moran Local")

mapa_moran_DISC_PCT <- cbind(miobj, DISC_PCT_lmoran)
ggplot(mapa_moran_DISC_PCT)+
  geom_sf(aes(fill = Ii))+
  labs(fill = "Estadísitico Moran Local")
```

```{r, echo= FALSE}

lisamap(objesp = miobj,
        var = 'DISC_PCT',
        pesos = miobj.w.W,
        tituloleyenda = 'Significancia\n("x-y", léase\ncomo "x"\nrodeado de "y"',
        leyenda = T,
        anchuratitulo = 700,
        tamanotitulo = 8,
        fuentedatos = 'Censo 2010',
        titulomapa = 'Clusters LISA de la variable porcentaje de personas discapacitadas')

```

Para establecer la relación entre la variable de Discapacidad contra las variables de contaminación se realiza entonces la modelización de los datos. 

```{r, include= FALSE }
names (miobj)
seleccionadas <- miobj %>% dplyr::select(
  TOPONIMIA = TOPONIMIA,
  DISC = DISC,
  TOTALPERS = TOTALPERS,
  TOTALVIV = TOTALVIV,
  DISC_PCT = DISC_PCT,
  AguaEstancada = "Contaminación: Aguas estancadas: Si",
  Basura = "Contaminación: Basura: Si",
  Cañada = "Contaminación: Cañada: Si",
  Pocilga_Granja = "Contaminación: Pocilga o granja: Si",
  Humo_GasesFábrica = "Contaminación: Humo o gases de fábrica: Si",
  Desechos_Fabrica_Taller_Hospital = "Contaminación: Desechos o residuos de fábrica, taller, hospital: Si",
  EnvasadoraGas = "Contaminación: Envasadora de gas: Si",
  BombaGasolina = "Contaminación: Bomba gasolina: Si",
  Fabrica_ProductosQuimicos =  "Contaminación: Fábrica productos químicos: Si",
  Ruido_VehiculosyMotores = "Contaminación: Ruído de vehículos y motores: Si",
  Ruido_Fabrica_Taller = "Contaminación: Ruídos de fábrica o taller: Si",
  RuidoYHumo_PlantaElectrica = "Contaminación: Ruídos o humo de planta eléctrica: Si",
  MusicaAlta_Bares_Colmados_Vecinos = "Contaminación: Música alta de bares, colmados o vecinos: Si")
  

seleccionadas_PCT <- seleccionadas %>% mutate(AguaEstancada_PCT= AguaEstancada/TOTALVIV*100, Basura_PCT=Basura/TOTALVIV*100, Cañada_PCT=Cañada/TOTALVIV*100, Pocilga_Granja_PCT=Pocilga_Granja/TOTALVIV*100, Humo_GasesFábrica_PCT=Humo_GasesFábrica/TOTALVIV*100, Desechos_Fabrica_Taller_Hospital_PCT=Desechos_Fabrica_Taller_Hospital/TOTALVIV*100, EnvasadoraGas_PCT=EnvasadoraGas/TOTALVIV*100, BombaGasolina_PCT=BombaGasolina/TOTALVIV*100, Fabrica_ProductosQuimicos_PCT=Fabrica_ProductosQuimicos/TOTALVIV*100,Ruido_VehiculosyMotores_PCT=Ruido_VehiculosyMotores/TOTALVIV*100, Ruido_Fabrica_Taller_PCT=Ruido_Fabrica_Taller/TOTALVIV*100, RuidoYHumo_PlantaElectrica_PCT=RuidoYHumo_PlantaElectrica/TOTALVIV*100, MusicaAlta_Bares_Colmados_Vecinos_PCT=MusicaAlta_Bares_Colmados_Vecinos/TOTALVIV*100)

seleccionadas_PCT_LOG <- seleccionadas_PCT %>% mutate(DISC_PCT_LOG= log1p(DISC_PCT), AguaEstancada_PCT_LOG= log1p(AguaEstancada_PCT), Basura_PCT_LOG= log1p(Basura_PCT), Cañada_PCT_LOG= log1p(Cañada_PCT), Pocilga_Granja_PCT_LOG= log1p(Pocilga_Granja_PCT), Humo_GasesFábrica_PCT_LOG= log1p(Humo_GasesFábrica_PCT), Desechos_Fabrica_Taller_Hospital_PCT_LOG= log1p(Desechos_Fabrica_Taller_Hospital_PCT), EnvasadoraGas_PCT_LOG= log1p(EnvasadoraGas_PCT), BombaGasolina_PCT_LOG= log1p(BombaGasolina_PCT), Fabrica_ProductosQuimicos_PCT_LOG= log1p(Fabrica_ProductosQuimicos_PCT), Ruido_VehiculosyMotores_PCT_LOG= log1p(Ruido_VehiculosyMotores_PCT),Ruido_Fabrica_Taller_PCT_LOG= log1p(Ruido_Fabrica_Taller_PCT), RuidoYHumo_PlantaElectrica_PCT_LOG= log1p(RuidoYHumo_PlantaElectrica_PCT), MusicaAlta_Bares_Colmados_Vecinos_PCT_LOG= log1p(MusicaAlta_Bares_Colmados_Vecinos_PCT) )
```

Evaluando la correlación:

```{r, echo= FALSE}

(gmoranw <- moran.test(x = seleccionadas_PCT_LOG$DISC_PCT, listw = miobj.w.W))

(gmoranb <- moran.test(x = seleccionadas_PCT_LOG$DISC_PCT, listw = miobj.w.B))

(gmoranwl <- moran.test(x = seleccionadas_PCT_LOG$DISC_PCT_LOG, listw = miobj.w.W))

(gmoranwl <- moran.test(x = seleccionadas_PCT_LOG$DISC_PCT_LOG, listw = miobj.w.B))

```

Todos los resultados muestran correlación positiva y valores de p menores que el nivel de significancia de 0.05, por lo que se puede rechazar la hipótesis nula e indicar que existe correlación entre las variables. 

Evaluando el supuesto de normalidad:

```{r, echo= FALSE}

shapiro.test(seleccionadas_PCT_LOG$DISC_PCT)

shapiro.test(seleccionadas_PCT_LOG$DISC_PCT_LOG)
```

El test no nos da las evidencias suficientes para rechazar la hipótesis de normalidad. 

Contruyendo el modelo lineal:

```{r, include= FALSE}
modlin <- seleccionadas_PCT_LOG %>% select(contains('_PCT_LOG')) %>%
  st_drop_geometry() %>% lm(DISC_PCT_LOG ~ ., .)
```

```{r, echo= FALSE}
modlin %>% summary
```

Resultan significativas las variables de contaminación por Basura, Cañada y Fábrica de productos químicos. 

Evaluando la heterocedasticidad:

```{r, echo= FALSE}
modlin %>% bptest
```
Con un valor de p mayor de 0.05, no podemos rechazar la hipótesis nula. Por lo tanto suponemos homogeneidad de varianzas.

Contruyendo el modelo espacial autorregresivo:

```{r, include= FALSE}

sar <- seleccionadas_PCT_LOG %>% select(contains('_PCT_LOG')) %>%
  st_drop_geometry() %>%
  spautolm(formula = DISC_PCT_LOG ~ ., data = ., listw = miobj.w.W)
summary(sar)

sar2 <- seleccionadas_PCT_LOG %>% select(contains('_PCT_LOG')) %>%
  st_drop_geometry() %>%
  spautolm(formula = DISC_PCT_LOG ~ Basura_PCT_LOG + Cañada_PCT_LOG + Fabrica_ProductosQuimicos_PCT_LOG, data = ., listw = miobj.w.W)
```

```{r, echo= FALSE}
summary(sar2)
```

Los coeficientes de regresión son 0.707 y 0.043.Podemos decir que 0.707 es el valor medio de la variable discapacidad cuando las variables predictoras son cero. Mientras que 0.043, es el efecto medio sobre la variable discapacidad al aumentar en una unidad el valor de las variables de contaminación. 

Existe una relación lineal positiva entre las variables, cuando aumenta en una unidad las variables de contaminación, la discapacidad aumenta en 0.043 unidades.

Con relación al análisis geoestadístico a continuación presentamos el mapa que muestra la cantidad de precipitaciones en el pas durante al año 1984:

```{r, include= FALSE}
rutapre <- 'DATA/onamet_prec_anual_sf.gpkg'
pre <- st_read(rutapre)
st_crs(pre) <- 4326
pre <- st_transform(pre, 32619)
pre

summary(pre$X1984)
hist(pre$X1984)
hist(log(pre$X1984))

shapiro.test(pre$X1984)
shapiro.test(log(pre$X1984))

pre1984 <- na.omit(pre[,c('Estación', 'X1984')])
pre1984$X1984log <- log(pre1984$X1984)
pre1984


ggplot() +
  geom_sf(data = prov, fill = 'white') +
  geom_sf(data = pre1984, aes(col = X1984log), size = 6) +
  scale_colour_gradient(low="#deebf7", high="#3182bd") +
  geom_sf_text(data = prov, aes(label=TOPONIMIA), check_overlap = T, size = 2) +
  geom_sf_text(data = pre1984, aes(label=Estación), check_overlap = T, size = 1.5) +
  theme_bw()

v84 <- variogram(X1984log~1, pre1984)
v84
plot(v84, plot.numbers = T)

v84_m <- fit.variogram(v84, vgm(model = "Sph", range = 50000))
v84_m
plot(v84, v84_m, plot.numbers = T)

v84_m2 <- fit.variogram(v84, vgm(model = "Exp", range = 50000))
v84_m2
plot(v84, v84_m2, plot.numbers = T)

v84_m3 <- fit.variogram(v84, vgm(model = "Gau", range = 50000))
v84_m3
plot(v84, v84_m3, plot.numbers = T)

attr(v84_m, 'SSErr')
attr(v84_m2, 'SSErr')
attr(v84_m3, 'SSErr')

crsdestino <- 32619
grd <- st_bbox(prov) %>%
  st_as_stars(dx = 5000) %>% 
  st_set_crs(crsdestino) %>%
  st_crop(prov)

plot(grd)

k <- krige(formula = X1984log~1, locations = pre1984, newdata = grd, model = v84_m2) 
k

plot(k)

ggplot() +
  geom_stars(data = k, aes(fill = var1.pred, x = x, y = y)) + 
  scale_fill_gradient(low="#deebf7", high="#3182bd") +
  geom_sf(data = st_cast(prov, "MULTILINESTRING")) +
  geom_sf(data = pre1984) +
  geom_sf_text(data = prov, aes(label=TOPONIMIA), check_overlap = T, size = 2) +
  theme_bw()
```

```{r, echo= FALSE}
ggplot() +
  geom_stars(data = exp(k), aes(fill = var1.pred, x = x, y = y)) + 
  scale_fill_gradient(low="#deebf7", high="#3182bd", trans = 'log10') +
  geom_sf(data = st_cast(prov, "MULTILINESTRING")) +
  geom_sf(data = pre1984) +
  geom_sf_text(data = prov, aes(label=TOPONIMIA), check_overlap = T, size = 2) +
  theme_bw()
```

# Información de soporte

Libro Análisis espacial con R: Usa R como un Sistema de Información Geográfica, Jean-François Mas. 
Repositorio Material de Apoyo en GitHub. 

# *Script* reproducible

#Carga de los paquetes necesarios

```{r}
library(sf)
library(raster)
library(rgdal)
library(tidyverse)
library(readxl)
library(tmap)
library(RColorBrewer)
library(units)
library(spdep)
library(lmtest)
library(ggplot2)
library(gstat)
library(stars)
source('lisaclusters.R')
```

#Analisis Exploratorio de los Datos

```{r}
vivpersgeom_sf <- readRDS('DATA/vivpersgeom_sf.RDS')
miobj <- vivpersgeom_sf %>% select(
  matches('TOPONIMIA|Categoría Ocupacional: Discapacitado|Contaminación.*Si$|Población total|Condición de ocupación')
)
miobj <- miobj %>% mutate(TOTALVIV=`Condición de ocupación: Ocupada con personas presentes` + `Condición de ocupación: Desocupada`) %>% select(-matches('Condición de ocupación'))
miobj <- miobj %>% rename(TOTALPERS='Población total', DISC='Categoría Ocupacional: Discapacitado') %>% mutate(DISC_PCT=DISC/TOTALPERS*100)
miobj
rutadiv <- 'DATA/divisionRD.gpkg'
prov <- st_read(rutadiv, layer = 'PROVCenso2010')
```

# Análisis de Vecindad

```{r}
miobj.sp <- as_Spatial(miobj)
miobj.nb <- poly2nb(as(miobj, 'Spatial'), row.names = miobj$TOPONIMIA, queen = TRUE)
summary(miobj.nb)
coords <- coordinates(as((miobj), 'Spatial'))
plot(miobj.sp, border="blue", lwd=0.5)
plot.nb(miobj.nb,coords, add = T)
```

# Matriz de Pesos Espaciales

```{r}
miobj.w.W <- nb2listw(miobj.nb)
miobj.w.W
miobj.w.B <- nb2listw(miobj.nb, style = 'B')
miobj.w.B
```

# Test de I de Moran Global

```{r}
moran.test(miobj$DISC, listw = miobj.w.W)
moran.test(miobj$DISC_PCT, listw = miobj.w.W)
moran.plot(miobj$DISC, listw = miobj.w.W)
moran.plot(miobj$DISC_PCT, listw = miobj.w.W)
```

# Test de I de Moran Local

```{r}
DISC_lmoran <- localmoran(miobj$DISC, listw = miobj.w.W)
summary(DISC_lmoran)

DISC_PCT_lmoran <- localmoran(miobj$DISC_PCT, listw = miobj.w.W)
summary(DISC_PCT_lmoran)

mapa_moran <- cbind(miobj, DISC_lmoran)
ggplot(mapa_moran)+
  geom_sf(aes(fill = Ii))+
  labs(fill = "Estadísitico Moran Local")

mapa_moran_DISC_PCT <- cbind(miobj, DISC_PCT_lmoran)
ggplot(mapa_moran_DISC_PCT)+
  geom_sf(aes(fill = Ii))+
  labs(fill = "Estadísitico Moran Local")
```

# Mapa de Cluster LISA

```{r}

lisamap(objesp = miobj,
        var = 'DISC_PCT',
        pesos = miobj.w.W,
        tituloleyenda = 'Significancia\n("x-y", léase\ncomo "x"\nrodeado de "y"',
        leyenda = T,
        anchuratitulo = 700,
        tamanotitulo = 8,
        fuentedatos = 'Censo 2010',
        titulomapa = 'Clusters LISA de la variable porcentaje de personas discapacitadas')

```
# Modelización

```{r}
names (miobj)
seleccionadas <- miobj %>% dplyr::select(
  TOPONIMIA = TOPONIMIA,
  DISC = DISC,
  TOTALPERS = TOTALPERS,
  TOTALVIV = TOTALVIV,
  DISC_PCT = DISC_PCT,
  AguaEstancada = "Contaminación: Aguas estancadas: Si",
  Basura = "Contaminación: Basura: Si",
  Cañada = "Contaminación: Cañada: Si",
  Pocilga_Granja = "Contaminación: Pocilga o granja: Si",
  Humo_GasesFábrica = "Contaminación: Humo o gases de fábrica: Si",
  Desechos_Fabrica_Taller_Hospital = "Contaminación: Desechos o residuos de fábrica, taller, hospital: Si",
  EnvasadoraGas = "Contaminación: Envasadora de gas: Si",
  BombaGasolina = "Contaminación: Bomba gasolina: Si",
  Fabrica_ProductosQuimicos =  "Contaminación: Fábrica productos químicos: Si",
  Ruido_VehiculosyMotores = "Contaminación: Ruído de vehículos y motores: Si",
  Ruido_Fabrica_Taller = "Contaminación: Ruídos de fábrica o taller: Si",
  RuidoYHumo_PlantaElectrica = "Contaminación: Ruídos o humo de planta eléctrica: Si",
  MusicaAlta_Bares_Colmados_Vecinos = "Contaminación: Música alta de bares, colmados o vecinos: Si")
  

seleccionadas_PCT <- seleccionadas %>% mutate(AguaEstancada_PCT= AguaEstancada/TOTALVIV*100, Basura_PCT=Basura/TOTALVIV*100, Cañada_PCT=Cañada/TOTALVIV*100, Pocilga_Granja_PCT=Pocilga_Granja/TOTALVIV*100, Humo_GasesFábrica_PCT=Humo_GasesFábrica/TOTALVIV*100, Desechos_Fabrica_Taller_Hospital_PCT=Desechos_Fabrica_Taller_Hospital/TOTALVIV*100, EnvasadoraGas_PCT=EnvasadoraGas/TOTALVIV*100, BombaGasolina_PCT=BombaGasolina/TOTALVIV*100, Fabrica_ProductosQuimicos_PCT=Fabrica_ProductosQuimicos/TOTALVIV*100,Ruido_VehiculosyMotores_PCT=Ruido_VehiculosyMotores/TOTALVIV*100, Ruido_Fabrica_Taller_PCT=Ruido_Fabrica_Taller/TOTALVIV*100, RuidoYHumo_PlantaElectrica_PCT=RuidoYHumo_PlantaElectrica/TOTALVIV*100, MusicaAlta_Bares_Colmados_Vecinos_PCT=MusicaAlta_Bares_Colmados_Vecinos/TOTALVIV*100)

seleccionadas_PCT_LOG <- seleccionadas_PCT %>% mutate(DISC_PCT_LOG= log1p(DISC_PCT), AguaEstancada_PCT_LOG= log1p(AguaEstancada_PCT), Basura_PCT_LOG= log1p(Basura_PCT), Cañada_PCT_LOG= log1p(Cañada_PCT), Pocilga_Granja_PCT_LOG= log1p(Pocilga_Granja_PCT), Humo_GasesFábrica_PCT_LOG= log1p(Humo_GasesFábrica_PCT), Desechos_Fabrica_Taller_Hospital_PCT_LOG= log1p(Desechos_Fabrica_Taller_Hospital_PCT), EnvasadoraGas_PCT_LOG= log1p(EnvasadoraGas_PCT), BombaGasolina_PCT_LOG= log1p(BombaGasolina_PCT), Fabrica_ProductosQuimicos_PCT_LOG= log1p(Fabrica_ProductosQuimicos_PCT), Ruido_VehiculosyMotores_PCT_LOG= log1p(Ruido_VehiculosyMotores_PCT),Ruido_Fabrica_Taller_PCT_LOG= log1p(Ruido_Fabrica_Taller_PCT), RuidoYHumo_PlantaElectrica_PCT_LOG= log1p(RuidoYHumo_PlantaElectrica_PCT), MusicaAlta_Bares_Colmados_Vecinos_PCT_LOG= log1p(MusicaAlta_Bares_Colmados_Vecinos_PCT) )
```

#Evaluando Correlación

```{r}

(gmoranw <- moran.test(x = seleccionadas_PCT_LOG$DISC_PCT, listw = miobj.w.W))

(gmoranb <- moran.test(x = seleccionadas_PCT_LOG$DISC_PCT, listw = miobj.w.B))

(gmoranwl <- moran.test(x = seleccionadas_PCT_LOG$DISC_PCT_LOG, listw = miobj.w.W))

(gmoranwl <- moran.test(x = seleccionadas_PCT_LOG$DISC_PCT_LOG, listw = miobj.w.B))

```

#Evaluando el supuesto de normalidad

```{r}
shapiro.test(seleccionadas_PCT_LOG$DISC_PCT)

shapiro.test(seleccionadas_PCT_LOG$DISC_PCT_LOG)
```

#Modelo Lineal

```{r}

modlin <- seleccionadas_PCT_LOG %>% select(contains('_PCT_LOG')) %>%
  st_drop_geometry() %>% lm(DISC_PCT_LOG ~ ., .)
modlin %>% summary
modlin %>% bptest
```

#Modelo Espacial Autorregresivo

```{r}

sar <- seleccionadas_PCT_LOG %>% select(contains('_PCT_LOG')) %>%
  st_drop_geometry() %>%
  spautolm(formula = DISC_PCT_LOG ~ ., data = ., listw = miobj.w.W)
summary(sar)
```

```{r}

sar2 <- seleccionadas_PCT_LOG %>% select(contains('_PCT_LOG')) %>%
  st_drop_geometry() %>%
  spautolm(formula = DISC_PCT_LOG ~ Basura_PCT_LOG + Cañada_PCT_LOG + Fabrica_ProductosQuimicos_PCT_LOG, data = ., listw = miobj.w.W)
summary(sar2)
```
#Geoestadística con datos puntuales

```{r}
rutapre <- 'DATA/onamet_prec_anual_sf.gpkg'
pre <- st_read(rutapre)
st_crs(pre) <- 4326
pre <- st_transform(pre, 32619)
pre
```

#EDA eligiendo el año 1984

```{r}

summary(pre$X1984)
hist(pre$X1984)
hist(log(pre$X1984))

shapiro.test(pre$X1984)
shapiro.test(log(pre$X1984))

pre1984 <- na.omit(pre[,c('Estación', 'X1984')])
pre1984$X1984log <- log(pre1984$X1984)
pre1984


ggplot() +
  geom_sf(data = prov, fill = 'white') +
  geom_sf(data = pre1984, aes(col = X1984log), size = 6) +
  scale_colour_gradient(low="#deebf7", high="#3182bd") +
  geom_sf_text(data = prov, aes(label=TOPONIMIA), check_overlap = T, size = 2) +
  geom_sf_text(data = pre1984, aes(label=Estación), check_overlap = T, size = 1.5) +
  theme_bw()
```

#Variograma Muestral

```{r}
v84 <- variogram(X1984log~1, pre1984)
v84
plot(v84, plot.numbers = T)
```

#Variograma Modelo

```{r}
v84_m <- fit.variogram(v84, vgm(model = "Sph", range = 50000))
v84_m
plot(v84, v84_m, plot.numbers = T)

v84_m2 <- fit.variogram(v84, vgm(model = "Exp", range = 50000))
v84_m2
plot(v84, v84_m2, plot.numbers = T)

v84_m3 <- fit.variogram(v84, vgm(model = "Gau", range = 50000))
v84_m3
plot(v84, v84_m3, plot.numbers = T)

attr(v84_m, 'SSErr')
attr(v84_m2, 'SSErr')
attr(v84_m3, 'SSErr')
```

#Interpolación por kriging ordinario

```{r}
crsdestino <- 32619
grd <- st_bbox(prov) %>%
  st_as_stars(dx = 5000) %>% 
  st_set_crs(crsdestino) %>%
  st_crop(prov)

plot(grd)

k <- krige(formula = X1984log~1, locations = pre1984, newdata = grd, model = v84_m2) 
k

plot(k)

ggplot() +
  geom_stars(data = k, aes(fill = var1.pred, x = x, y = y)) + 
  scale_fill_gradient(low="#deebf7", high="#3182bd") +
  geom_sf(data = st_cast(prov, "MULTILINESTRING")) +
  geom_sf(data = pre1984) +
  geom_sf_text(data = prov, aes(label=TOPONIMIA), check_overlap = T, size = 2) +
  theme_bw()

ggplot() +
  geom_stars(data = exp(k), aes(fill = var1.pred, x = x, y = y)) + 
  scale_fill_gradient(low="#deebf7", high="#3182bd", trans = 'log10') +
  geom_sf(data = st_cast(prov, "MULTILINESTRING")) +
  geom_sf(data = pre1984) +
  geom_sf_text(data = prov, aes(label=TOPONIMIA), check_overlap = T, size = 2) +
  theme_bw()
```
# Referencias

https://censo2010.one.gob.do/

```{r}
tinytex::reinstall_tinytex()
tinytex::tinytex_root()
```
